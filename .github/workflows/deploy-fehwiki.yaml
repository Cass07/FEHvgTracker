name: Deploy to Fehwiki Server

on:
  push:
    branches:
      ["master"]

env:
  # project zip file name
  PROJECT_NAME: fehwiki-voting
  # S3 bucket name
  BUCKET_NAME: kass-deploy
  # CodeDeploy application name
  CODE_DEPLOY_APP_NAME: fehwiki-voting
  # CodeDeploy deploy group name
  DEPLOYMENT_GROUP_NAME: fehwiki-voting-group


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
            distribution: 'temurin'
            java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew'

      - name: Add application-test yaml secrets
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yaml

        env:
          spring.security.oauth2.client.registration.google.client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
          spring.security.oauth2.client.registration.google.client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.google.scope: ${{ secrets.GOOGLE_SCOPE }}
          spring.security.oauth2.client.registration.google.redirect-uri: ${{ secrets.GOOGLE_REDIRECT_URI_TEST }}
          spring.datasource.url: ${{ secrets.DATA_URL }}
          spring.datasource.driver-class-name: ${{ secrets.DATA_DRIVER }}
          spring.datasource.username: ${{ secrets.DATA_USERNAME }}
          spring.datasource.password: ${{ secrets.DATA_PASSWORD }}

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: build

      - name: Make directory for deliver
        run: mkdir deploy

      - name: Jar Copy
        run: cp ./build/libs/*.jar ./deploy/

      - name: Script File Copy
        run: |
          cp ./script/* ./deploy/

      - name: Zipped File
        run: zip -r -qq -j ./$PROJECT_NAME.zip ./deploy

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_PASS }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./$PROJECT_NAME.zip s3://$BUCKET_NAME/$PROJECT_NAME.zip

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --application-name $CODE_DEPLOY_APP_NAME \
          --deployment-group-name $DEPLOYMENT_GROUP_NAME \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME.zip \
          --region ${{ secrets.AWS_REGION }}